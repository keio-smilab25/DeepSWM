name: inference

on:
  schedule:
    - cron: "20 * * * *" # Run at 20 minutes past every hour
    - cron: "50 * * * *" # Run at 50 minutes past every hour
  workflow_dispatch: # Manual execution

jobs:
  inference:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions: # Grant write permissions to token
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Upgrade pip and install dependencies
        timeout-minutes: 15
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            echo "Installing dependencies from requirements.txt..."
            pip install -r requirements.txt --timeout 300
          else
            echo "No requirements.txt found; skipping pip install"
          fi

      - name: Make scripts executable
        run: |
          chmod +x scripts/inference.sh
          chmod +x scripts/cleanup_old_data.sh

      - name: Create logs directory
        run: mkdir -p logs

      - name: Run inference pipeline
        timeout-minutes: 10
        run: |
          ./scripts/inference.sh

      - name: Clean up old data (oldest hour)
        timeout-minutes: 5
        run: |
          echo "🧹 Cleaning up oldest hour data to free space..."
          ./scripts/cleanup_old_data.sh --mode=oldest-hour
          echo "✅ Data cleanup completed"

      - name: Weekly deep cleanup (Mondays only)
        if: github.event.schedule == '20 * * * *' && github.event_name == 'schedule'
        timeout-minutes: 15
        run: |
          # Run deep cleanup only on Mondays at the first scheduled time
          DAY_OF_WEEK=$(date +%u)  # 1=Monday, 7=Sunday
          HOUR=$(date +%H)
          if [[ "$DAY_OF_WEEK" == "1" && "$HOUR" == "00" ]]; then
            echo "🧹 Running weekly deep cleanup (removing data older than 3 months)..."
            ./scripts/cleanup_old_data.sh --mode=cleanup --months=3
            echo "🖼️ Running image cleanup (removing images older than 2 years)..."
            ./scripts/cleanup_old_data.sh --mode=images --years=2
            echo "✅ Weekly deep cleanup completed"
          else
            echo "⏭️ Skipping weekly cleanup (not Monday 00:xx)"
          fi

      - name: Upload logs artifact (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: inference-logs
          path: logs/
          if-no-files-found: warn

      - name: Commit and push results (always)
        if: always()
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add data/ ml/datasets/ logs/ || echo "Warning: Some directories could not be added"
          TIMESTAMP=$(date +"%H:%M")
          git commit -m "🤖Update data and logs [auto] at $TIMESTAMP" || echo "No changes to commit"
          git push || echo "Warning: Failed to push changes"

      - name: Final status (always)
        if: always()
        run: |
          echo "✅ Workflow completed at $(date)"
          echo "📊 Check logs/ directory for detailed execution logs"
          LATEST_LOG=$(ls -1t logs/inference_log_*.txt 2>/dev/null | head -1)
          if [ -n "$LATEST_LOG" ]; then
            echo "=== Latest execution summary ($LATEST_LOG) ==="
            tail -n 50 "$LATEST_LOG"
          else
            echo "No log files were found in logs/"
          fi 
 